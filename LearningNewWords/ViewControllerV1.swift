//
//  ViewControllerV1.swift
//  LearningNewWords
//
//  Created by user on 25.01.2022.
//

import UIKit

class ViewControllerV1: UIViewController {
    
   
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Do any additional setup after loading the view.
    }
    
    @IBOutlet weak var indicatorLabel: UILabel!
    @IBOutlet weak var numIndicator: UILabel!

    @IBOutlet weak var maxNumIndicator: UILabel!
    
    @IBAction func printButton(_ sender: Any) {
        statusLable.text = ("dictionary = \(dictionary); ValueNow: \(checkValueSecond) or \(checkValue)")
    }
    
    @IBOutlet weak var statusLable: UILabel!
    //–°–ª–æ–≤–∞—Ä—å –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Å–ª–æ–≤–∞ –∏ –ø–µ—Ä–µ–≤–æ–¥.
    var  dictionary: [String:String] = ["–ö–æ—Ç":"Cat", "–°–æ–±–∞–∫–∞":"Dog","–†—ã–±–∞":"Fish"]
    
    
    var checkValue: String = ""
    var checkValueSecond: String = ""
    
    //–ö–Ω–æ–ø–∫–∞ –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–∏—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ —Å–ª–æ–≤–∞—Ä—å
    @IBAction func addButton(_ sender: UIButton) {
        dictionary = ["–ö–æ—Ç":"Cat", "–°–æ–±–∞–∫–∞":"Dog","–†—ã–±–∞":"Fish"]
        print (dictionary)
        print (checkValueSecond)
    }
    
    //–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞
    func testCheck(One: Dictionary<String, String>){
        if dictionary == [:] {
            resultLabel.text = "–ù–µ—Ç —Å–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
            wordLabel.text = ""
        } else {
            let index: Int = Int(arc4random_uniform(UInt32(One.count)))
            
            let randomKay = Array(dictionary.keys)[index]
            let randomVal = Array(dictionary.values)[index]
            print (index, randomKay, randomVal)
            wordLabel.text = randomKay
            
            dictionary[randomKay] = nil
            print (dictionary)
            checkValue = randomVal
            
        }
        
        
    }
    
    @IBOutlet weak var wordLabel: UILabel!
    
    
    @IBOutlet weak var textField: UITextField!
    
    //–ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞
    @IBAction func startButton(_ sender: UIButton) {
        if dictionary != [:]{
            maxNumIndicator.text = String(dictionary.count)
            numIndicator.text = "1"

        }
 
        testCheck(One: dictionary)
       
    }
    
    //–ê–ª–µ—Ä—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    func alert() {
        let message = UIAlertController(title: "–°–æ–æ–±—â–µ–Ω–∏–µ", message: "–°–ª–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç –∏–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ", preferredStyle: .alert)
        let ok = UIAlertAction(title: "OK", style: .default) { (action) -> Void in
            print("Ok button tapped")
        }
        message.addAction(ok)
        self.present(message, animated: .random(), completion: nil)
    }
    @IBAction func checkButton(_ sender: Any) {
       
        
        if dictionary == [:] || textField.text == "" {
            wordLabel.text = "No"
            resultLabel.text = "–°–ª–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç"
            textField.text = ""
            alert()
            numIndicator.text = "0"
            
        } else if textField.text == checkValue || textField.text == checkValueSecond {
            resultLabel.text = "–í–µ—Ä–Ω–æ"
            resultLabel.textColor = .green
            
            if dictionary == [:]  {
                wordLabel.text = "No"
            } else {
                textField.text = ""
                print(dictionary)
                checkValue = ""
                checkValueSecond = ""
                let index: Int = Int(arc4random_uniform(UInt32(dictionary.count)))
                let randomKay = Array(dictionary.keys)[index]
                let randomVal = Array(dictionary.values)[index]
                dictionary[randomKay] = nil
                
               
                wordLabel.text = randomKay
                checkValueSecond = randomVal
                let test = indicatorLabel.text
                indicatorLabel.text = "\(test ?? "")üü¢"
                let num: Int = Int(numIndicator.text!)! + 1
                numIndicator.text = String(num)
                
            }
           
        } else {
            resultLabel.text = "–ù–µ –≤–µ—Ä–Ω–æ"
            resultLabel.textColor = .red
        checkValue = ""
       checkValueSecond  = ""
            let index: Int = Int(arc4random_uniform(UInt32(dictionary.count)))
            let randomKay = Array(dictionary.keys)[index]
            let randomVal = Array(dictionary.values)[index]
            dictionary[randomKay] = nil
            
            wordLabel.text = randomKay
            checkValueSecond = randomVal
            
            let test = indicatorLabel.text
            indicatorLabel.text = "\(test ?? "")üî¥"
            let num: Int = Int(numIndicator.text!)! + 1
            numIndicator.text = String(num)
        }
   
        
    
        
    }
    

    
    @IBOutlet weak var resultLabel: UILabel!
}


